generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")

}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

enum AuthProvider {
  GOOGLE
  LOCAL
  
}

model User {
  id          String       @id @default(cuid())
  firebaseUid String       @unique
  email       String       @unique
  role        Role         @default(USER)
  provider    AuthProvider @default(LOCAL)
  createdAt   DateTime     @default(now())
  updatedAt DateTime  @updatedAt
 
  userInfo  UserInfo?
  Playlist Playlist[]
}

model UserInfo {
  id           String    @id @default(cuid())
  userId       String    @unique
  firstName    String?
  lastName     String?
  avatarUrl    String?
  age          Int
  phoneNumber  String?
  birthday     DateTime?

  user User @relation(fields: [userId], references: [id],onDelete: Cascade)
}

model Song {
  id          Int        @id @default(autoincrement())
  title       String
  artist      String
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  Int
  coverImage  String
  releaseDate DateTime
  playlists   Playlist[] @relation("PlaylistSongs")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  createdAt  DateTime? @default(now())   // Nullable + Default
  updatedAt  DateTime? @updatedAt        // Nullable + Auto update
  songs Song[]
}

model Playlist {
  id    Int    @id @default(autoincrement())
  name  String
  coverImage String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  songs Song[] @relation("PlaylistSongs")
}

// npx prisma migrate dev --name add_on_delete_cascade_to_userinfo_userid
